name: windivvun

on: push

env:
  RUST_VERSION: stable
  CARGO_INCREMENTAL: 0
  RUSTUP_MAX_RETRIES: 10
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: full

jobs:
  deploy:
    needs: [build-divvunspell-mso, build-windivvun]
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Setup Divvun CI
      uses: divvun/actions/setup@master
      with:
        key: ${{ secrets.DIVVUN_KEY }}
    - name: Get version
      id: version
      uses: divvun/actions/version@master
      with:
        cargo: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install build dependencies
      uses: divvun/actions/pahkat/init@master
      with:
        repo: https://pahkat.uit.no/devtools/
        channel: nightly
        packages: pahkat-uploader, spelli
    - name: Move artifacts to appropriate directory
      run: |
        cp $env:RUNNER_WORKSPACE\pahkat-prefix\pkg\spelli\bin\spelli.exe artifacts\
    - name: Build installer
      id: installer
      uses: divvun/actions/inno-setup@master
      with:
        path: install.iss
        defines: Version=${{ steps.version.outputs.version }}
    - name: Deploy
      uses: divvun/actions/deploy@master
      with:
        package-id: windivvun
        platform: windows
        version: ${{ steps.version.outputs.version }}
        payload-path: ${{ steps.installer.outputs['installer-path'] }}
        repo: https://pahkat.thetc.se/tools/
        channel: ${{ steps.version.outputs.channel }}
        windows-kind: inno
        windows-product-code: "{41F71B6E-DE82-433D-8659-7E2D7C3B95E2}_is1"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-divvunspell-mso:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - triple: i686-pc-windows-msvc
            vcvars: vcvars32.bat
            arch: i686
          - triple: x86_64-pc-windows-msvc
            vcvars: vcvars64.bat
            arch: x86_64
    steps:
    - name: Checkout mso-nda-resources
      uses: actions/checkout@v2
      with:
        repository: divvun/mso-nda-resources
        token: ${{ secrets.REPO_TOKEN }}
    - name: Setup Divvun CI
      uses: divvun/actions/setup@master
      with:
        key: ${{ secrets.DIVVUN_KEY }}
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-${{ matrix.triple }}
        profile: minimal
        override: true 
    - name: Build
      shell: cmd
      run: |
        cd divvunspell-mso
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\${{ matrix.vcvars }}"
        cargo build --target ${{ matrix.triple }} --release
      env:
        RUSTC_BOOTSTRAP: 1
        SENTRY_DSN: ${{ secrets.MSO_DSN }}
    - name: Code sign
      uses: divvun/actions/codesign@master
      with:
        path: target/${{ matrix.triple }}/release/divvunspellmso.dll
    - name: Upload divvunspell-mso (${{ matrix.arch }})
      uses: actions/upload-artifact@v2
      with:
        name: divvunspell-mso-${{ matrix.arch }}
        path: target/${{ matrix.triple }}/release/divvunspellmso.dll
  build-windivvun:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - triple: i686-pc-windows-msvc
            vcvars: vcvars32.bat
            arch: i686
          - triple: x86_64-pc-windows-msvc
            vcvars: vcvars64.bat
            arch: x86_64
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Divvun CI
      uses: divvun/actions/setup@master
      with:
        key: ${{ secrets.DIVVUN_KEY }}
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-${{ matrix.triple }}
        profile: minimal
        override: true
    - name: Build
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\${{ matrix.vcvars }}"
        cargo build --target ${{ matrix.triple }} --release
      env:
        RUSTC_BOOTSTRAP: 1
    - name: Code sign
      uses: divvun/actions/codesign@master
      with:
        path: target/${{ matrix.triple }}/release/windivvun.dll
    - name: Upload windivvun (${{ matrix.arch }})
      uses: actions/upload-artifact@v2
      with:
        name: windivvun-${{ matrix.arch }}
        path: target/${{ matrix.triple }}/release/windivvun.dll

