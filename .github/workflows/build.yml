on: push

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          restore-keys: |
            ${{ runner.os }}-cargo-index-
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Divvun CI
        uses: divvun/actions/setup@master
        with:
          key: ${{ secrets.DIVVUN_KEY }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Build
        shell: cmd
        run: |
          rustup set default-host i686-pc-windows-msvc

          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          rustup default stable-i686-pc-windows-msvc
          cargo build --target=i686-pc-windows-msvc --release
          
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          rustup default stable-x86_64-pc-windows-msvc
          cargo build --target=x86_64-pc-windows-msvc --release
          ls
      - name: Run Divvun Bundler
        id: bundler
        shell: bash
        run: |
          set -e
          ls -lah
          ls -lah $GITHUB_WORKSPACE/target/x86_64-pc-windows-msvc
          ls -lah $GITHUB_WORKSPACE/target/i686-pc-windows-msvc
          ls -lah $GITHUB_WORKSPACE/target/x86_64-pc-windows-msvc/release
          ls -lah $GITHUB_WORKSPACE/target/i686-pc-windows-msvc/release
          ls -lah $GITHUB_WORKSPACE/target/release
          source "$DIVVUN_CI_CONFIG/enc/env.sh"
          VERSION=`cargo metadata --no-deps --format-version=1 | jq -r '.packages[] | select(.name=="windivvun") | .version'`
          RUST_LOG="info" divvun-bundler.exe -t win -H "WinDivvun Speller Engine" \
            -V $VERSION --uuid "{FB90E8B8-EBE5-51BC-9BDE-28535417088D}" -R -c "$DIVVUN_CI_CONFIG\enc\creds\windows\divvun.pfx" checker \
            --a32 "$GITHUB_WORKSPACE/target/i686-pc-windows-msvc/release/windivvun.dll" \
            --a64 "$GITHUB_WORKSPACE/target/x86_64-pc-windows-msvc/release/windivvun.dll"
          echo "::set-env name=DEPLOY_VERSION::$VERSION"
          echo "::set-output name=installer::windivvun-$VERSION.exe"
      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          name: installer
          path: "${{ steps.bundler.outputs.installer }}"
      - name: Deploy to Pahkat
        uses: divvun/actions/deploy@master
        with:
          payload: "${{ steps.bundler.outputs.installer }}"
          repository: "https://pahkat.uit.no/tools"
          package: "windivvun"
          platform: "windows"
          version: "${{ env.DEPLOY_VERSION }}"

